// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.firebears;

import org.firebears.commands.*;
import org.firebears.recording.PlayRecordingCommand;
import org.firebears.recording.RecordingFactory;
import org.firebears.recording.StartRecordingCommand;
import org.firebears.recording.StopRecordingCommand;

import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.XboxController;
import edu.wpi.first.wpilibj.buttons.Button;
import edu.wpi.first.wpilibj.buttons.JoystickButton;

import org.firebears.subsystems.*;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {

    public final RecordingFactory recordingFactory;
    public final XboxController controller1;
    private final JoystickButton buttonA;
    private final JoystickButton buttonB;
    private final JoystickButton buttonX;
    private final JoystickButton buttonY;
    private final JoystickButton buttonBack;
    private final JoystickButton buttonStart;

    public OI() {

        recordingFactory = new RecordingFactory();
        
        controller1 = new XboxController(0);

        buttonA = new JoystickButton(controller1, 1); 
        buttonA.whenPressed(new PIDrelativeAngleCommand(90));

        buttonB = new JoystickButton(controller1, 2);
        buttonB.whenPressed(new PlayRecordingCommand(recordingFactory));

        buttonX = new JoystickButton(controller1, 3); 
        buttonX.whenPressed(new DistanceCommand(60));

        buttonY = new JoystickButton(controller1, 4); 
        buttonY.whenPressed(new PIDrelativeAngleCommand(-45));

        buttonBack = new JoystickButton(controller1, 7);
        buttonBack.whenPressed(new StartRecordingCommand(recordingFactory));

        buttonStart = new JoystickButton(controller1, 8);
        buttonStart.whenPressed(new StopRecordingCommand(recordingFactory));
    }

    public XboxController getController1() {
        return controller1;
    }
}

